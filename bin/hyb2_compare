#!/bin/bash -e
#finds significant differences between 2 sets of data

#allows up to 4 datasets for each condition (a,b,c,d - condition one) (i,j,k,l - condition two) 
#minimum 2 datasets for each condition

# -m minimum reads for DESeq2, default = 2
# -r range used to determine individual interactions, default = +/- 100, meaning each interaction would span 200nt range, a bigger range risk missing out interactions, while a smaler range risk reading one interaction as two
# -p upper quantile limit for contrast, default 0.95

#input prefix
#plot_differential_map -a test_1_rep1 -b test_1_rep2 -i test_2_rep1 -j test_2_rep2 -m 2 -r 100 -p 0.95

min=2
range=100
LIMIT=0.95
FOLDING=0
VARNA="$(VARNAcmd.sh)"

# Help message function
print_help() {
    echo "No Options Specified!"
    echo "Usage:"
    echo "To compare between datasets:"
    echo "hyb2_compare -i <Input.table> -o <Outpud_ID>"
    echo "Input.table format:"
    echo "Output1.hyb   Output1.GENE.contact.txt   condition_one"
    echo "Output2.hyb   Output2.GENE.contact.txt   condition_one"
    echo "Output3.hyb   Output3.GENE.contact.txt   condition_two"
    echo "Output4.hyb   Output4.GENE.contact.txt   condition_two"
    echo "You can prepare however many rows you like (at least 2 for each condition), categorized by condition_one and condition_two"
    echo " "
    echo "  -i   Input table You MANUALLY GENERATED"
    echo "  -d   Fasta file used for mapping"
    echo "  -a   Gene ID of interest"
    echo "  -j   Directory of VARNAcmd.jar (default set when installing hyb2)"
    echo "  -0   Folding option: 0 to disable, 1 to activate automatic folding of enriched interactions (default=0)"
    echo "  -m   DESeq2 chimera count filtering threshold (default=2)"
    echo "  -r   Range to define an interaction (default=100). 100nt from midpoint in both directions, meaning 200nt long for each defined interaction"
    echo "  -q   Upper limit for heatmap chimeric count (default=0.95)"
    echo " " 
    echo "Currently Not Compatible with Mac-OS-ARM due to several packages not being implemented yet."
    echo " "
    echo "Run hyb2 without options for details about hyb2, hyb2_coverage, and hyb2_app"
    echo " "
    echo "Any other queries, email me at laujianyou@live.com"
    exit 0
}

# parsingcommand line options
while getopts "i:o:m:r:q:a:d:j:0" OPTION
do
        case $OPTION in
                i) INPUT=$OPTARG ;;
                o) OUT=$OPTARG ;;
                m) min=$OPTARG ;;
                r) range=$OPTARG ;;
                q) LIMIT=$OPTARG ;;
                a) GENE=$OPTARG ;;
                d) FASTA=$OPTARG ;;
                j) VARNA=$OPTARG ;;
                0) FOLDING=$OPTARG ;;
                *) print_help ;;
        esac
done

#Prepare input tables for DESeq2
awk 'NF' $INPUT | while read x y z; do name=${y/.contact.txt/}; sort -k3,3nr $y | awk -v a=$name '!/^#/{print $1 "_" $2 "\t" a "=" $3}' > $name".forTable.txt"; done
: > $OUT".forTable.list.txt"
awk 'NF' $INPUT | while read x y z; do echo ${y/.contact.txt/.forTable.txt}  >> $OUT".forTable.list.txt"; done
awk 'NF' $INPUT | while read x y z; do echo ${y/.contact.txt/}; done | paste -sd '\t' | awk '{print "#seq_ID\t"$0}' | sed 's/-/_/g' > $OUT".table.txt"
make_hybrid_annotation_table.pl $(< $OUT".forTable.list.txt") | awk 'NR>1{gsub("NA","0",$0); print $0}' >> $OUT".table.txt"
awk 'NF' $INPUT | while read x y z; do echo -e ${y/.contact.txt/}"\t"$z | sed 's/-/_/g' ; done > $OUT"_names.table"

#Running DESeq2
DESeq_run.R $OUT".table.txt" $OUT"_names.table" $min

#Reformat DESeq output for plotting differential coverage map
cat "DESeq_"$OUT".txx" | sed "s/\"//g" | awk 'NR>1{print $1 "\tbaseMean=" $2 ";log2FoldChange=" $3 ";lfcSE=" $4 ";stat=" $5 ";pvalue=" $6 ";padj=" $7}' > $OUT".tmp1"
awk 'NR==1 {
    for (i=2; i<=NF; i++) {
        val[i-1] = $i
    }
}
NR > 1 {
    printf "%s\t", $1
    for (i=2; i<=NF; i++) {
        printf "%s=%s;", val[i-1], $i
    }
    print ""
}' $OUT".table.txt" > $OUT".tmp2"

#Final DESeq output
make_hybrid_annotation_table.pl $OUT".tmp2" $OUT".tmp1" | awk '{print $NF"\t"$0}' | sort -g | awk '$1!="NA" && ($1=="padj" || $1<0.05)' | cut -f2- > "DESeq_"$OUT"_significant.txx"
rm $OUT".tmp1" $OUT".tmp2"
last_field=$(awk 'NR==1{print NF}' "DESeq_"$OUT"_significant.txx")
cat "DESeq_"$OUT"_significant.txx" | awk -v last=$last_field '$(last-4)<0{print $1 "\t" log($last)/log(10)"\t"$(last-4)"\t"$last}$(last-4)>0{printf "%s\t%f\t", $1, -1*(log($last)/log(10)); print $(last-4)"\t"$last}' | awk 'NR>1' | tr "_" "\t" | sed '1s/^/x\ty\tlogpadj\tlog2FoldChange\tpadj\n/' > "DESeq_"$OUT"_significant.padj_heatmap.txt"

#Plot differential coverage map
differential_coverage_map.R "DESeq_"$OUT"_significant.padj_heatmap.txt" $OUT

#Plot similarity heatmap
: > $OUT".merge.txt"
cat $INPUT | while read x y z; do cat $y >> $OUT".merge.txt"; done

awk 'n=x[$1,$2]{print n"\n"$0;} {x[$1,$2]=$0;}' $OUT".merge.txt" | awk 'ORS=NR%2?FS:RS' | awk '{if (FNR==1) print $1"\t"$4"\t"$5"\t"$6; if (FNR>1 && $3<=$6) print $1"\t"$2"\t"$3; if (FNR>1 && $3>$6) print $4"\t"$5"\t"$6}' | awk 'FNR>2 && $0~/[a-z]/ || FNR>2 && $0~/[A-Z]/ {next} {print}' > $OUT".contact.txt"

similarity_heatmap.R $OUT".contact.txt" $LIMIT

#Split coverage map coordinates into individual interactions
DESeq_interaction_split_select.py $OUT $range
sed $'s/0\t0\t0.0\t0.0/x\ty\tlog2FoldChange\tpadj/g' $OUT"_"$range"range_pos_enrichment.txt" > $OUT"_"$range"_pos.tmp" && mv $OUT"_"$range"_pos.tmp" $OUT"_"$range"range_pos_enrichment.txt"
sed $'s/0\t0\t0.0\t0.0/x\ty\tlog2FoldChange\tpadj/g' $OUT"_"$range"range_neg_enrichment.txt" > $OUT"_"$range"_neg.tmp" && mv $OUT"_"$range"_neg.tmp" $OUT"_"$range"range_neg_enrichment.txt"

#Plot top 10 (lowest padj) zoomed-in coverage density map of the differential interactions
for f in $OUT"_"$range*enrichment.txt; do awk 'NR>1{print $1-150"\t"$1+150"\t"$2-150"\t"$2+150"\t"$3"\t"$4}' $f | sed '1s/^/x1\tx2\ty1\ty2\tlog2FoldChange\tpadj\n/;s/-.[0-9]\+\t/1\t/;s|\t\t|\t-|g' > ${f/.txt/.heatmap.txt}; done

value=()  # Initialize an empty array
while IFS= read -r line; do value+=($(echo "$line" | awk '{split($2,a,".contact.txt"); print a[1]}')); done < <(awk 'NF' "$INPUT")
num_values=${#value[@]}

for f in $OUT"_"$range*enrichment.heatmap.txt; do awk 'NR>1 && NR<12' "$f" | while read x1 x2 y1 y2 z; do args=("$x1" "$x2" "$y1" "$y2" "$LIMIT"); for ((i=0; i<num_values; i++)); do args+=("${value[i]}"); done; contact_density_map_zoom.R "${args[@]}"; done; done

declare -a condition_one_files
declare -a condition_two_files

while read -r x y z; do
    if [[ $z == "condition_one" ]]; then
        condition_one_files+=("$x")
    elif [[ $z == "condition_two" ]]; then
        condition_two_files+=("$x")
    fi
done < $INPUT

if [ "$FOLDING" == "1" ]
then
	for IN in "${condition_one_files[@]}"; do awk -v GENE="$GENE" '$4~GENE && $10~GENE' "${IN}"* > "${IN/hyb/pos.hyb}"; done
	for IN in "${condition_two_files[@]}"; do awk -v GENE="$GENE" '$4~GENE && $10~GENE' "${IN}"* > "${IN/hyb/neg.hyb}"; done

	for f in $OUT"_"$range*enrichment.heatmap.txt; do awk '{ if(NR>1 && NR<12 && $1>$3) print $3"\t"$4"\t"$1"\t"$2"\t"$5; else if (NR>1 && NR<12 && $1<$3) print $0}' $f | while read x1 x2 y1 y2 z; do res=$(($y1-$x1)); if [ 300 -gt $res ]; then hyb2_fold -i ${IN/hyb/pos.hyb} -a $GENE -d $FASTA -x $(($x1+1)) -l $(($res+300)) -j $VARNA; else hyb2_fold -i ${IN/hyb/pos.hyb} -a $GENE -d $FASTA -x $(($x1+1)) -y $(($y1+1)) -l 300 -j $VARNA; fi; done; done
	for f in $OUT"_"$range*enrichment.heatmap.txt; do awk '{ if(NR>1 && NR<12 && $1>$3) print $3"\t"$4"\t"$1"\t"$2"\t"$5; else if (NR>1 && NR<12 && $1<$3) print $0}' $f | while read x1 x2 y1 y2 z; do res=$(($y1-$x1)); if [ 300 -gt $res ]; then hyb2_fold -i ${IN/hyb/neg.hyb} -a $GENE -d $FASTA -x $(($x1+1)) -l $(($res+300)) -j $VARNA; else hyb2_fold -i ${IN/hyb/neg.hyb} -a $GENE -d $FASTA -x $(($x1+1)) -y $(($y1+1)) -l 300 -j $VARNA; fi; done; done
else
	echo "Use Options -0 to -9, and -j to Plot RNA Secondary Structures for Enriched Interactions"
fi

echo "Comparison Completed"

